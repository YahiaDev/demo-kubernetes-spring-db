# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb
      IMAGE_NAME: yahiadev/kubernetes-spring-postgres-demo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run tests!
      - run: gradle test
      # build image
      - run: gradle build
      - setup_remote_docker
      # build docker image
      - run:
          name: Build Docker image
          command: docker build --build-arg JAR_FILE=build/libs/\*.jar --build-arg ENV_PROFILE=local -t $IMAGE_NAME:0.17 .
      - setup_remote_docker
      # push docker image
     # - run:
     #     name: Publish Docker Image to Docker Hub
     #     command: |
     #       echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
     #       docker push $IMAGE_NAME:0.17

  publish-latest:
    environment:
      IMAGE_NAME: yahiadev/kubernetes-spring-postgres-demo
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - setup_remote_docker
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:0.17
workflows:
  version: 2
  build-master:
    jobs:
      - build:
          filters:
            branches:
              only: main
      - publish-latest:
          requires:
            - build
          filters:
            branches:
              only: main
